name: SonarQube
on:
  pull_request:
    branches:
      - main
jobs:
  backend:
    name: Backend sonar analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/back
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: 11
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Protazer_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
  frontend:
    name: Front end sonar analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    strategy:
      matrix:
        node-version: [ latest ]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{matrix.node-version}}

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build --if-present

    - name: Run tests with coverage
      run: npm run test:prod --if-present


    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5
      with:
        projectBaseDir: ./front
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}