name: Tests build scan and deploy app
on:
  pull_request:
    branches:
      - main
jobs:
  test_front:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    strategy:
      matrix:
        node-version: [ latest ]


    steps:
      - name: Checkout-code
        uses: actions/checkout@v5

      - name: SetUp NodeJs
        uses: actions/setup-node@v4
        with:
           node-version: ${{ matrix.node-version }}

      - name: Install front dependencies
        run: npm install

      - name: Build front application
        run: npm run build --if-present

      - name: Run front tests with coverage
        run: npm run test:prod --if-present

      - name: Upload front tests coverage
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: front test code coverage
          path: ./front/coverage/bobapp

  test_back:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{github.workspace}}/back

    strategy:
      matrix:
        java-version: [17]

    steps:
      - name: checkout code
        uses: actions/checkout@v5

      - name: Setup JAVA 17
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java-version}}
          distribution: temurin

      - name: install dependencies
        run: mvn clean install

      - name: run back tests and generate coverage report
        run: mvn clean verify

      - name: Backend code coverage report artifact
        uses: actions/upload-artifact@v4
        if: success() || failure()
        with:
          name: JaCoCo code coverage
          path: ./back/target/site/jacoco/

  sonar_backend:
    name: Backend sonar analysis
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ${{ github.workspace }}/back

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=Protazer_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD -Dsonar.qualitygate.wait=true

  sonar_frontend:
    name: Front end sonar analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }}/front

    strategy:
      matrix:
        node-version: [ latest ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build --if-present

      - name: Run tests with coverage
        run: npm run test:prod --if-present

      - name: SonarCloud Quality Gate
        uses: SonarSource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
